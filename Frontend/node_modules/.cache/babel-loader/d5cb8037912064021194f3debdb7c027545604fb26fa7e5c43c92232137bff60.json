{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/ESD/ESD_miniProject/Frontend/src/Components/ReadSpecialization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadSpecialization = () => {\n  _s();\n  const [specializations, setSpecializations] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchSpecializations = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:8080/api/v1/specialization\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"RES\", response); // Debugging\n        setSpecializations(response.data);\n      } catch (error) {\n        setError(\"Error fetching specializations.\");\n      }\n    };\n    fetchSpecializations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"View Specializations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group mt-3\",\n      children: specializations.map(spec => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: spec.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \" (\", spec.code, \") - \", spec.description]\n      }, spec.specialization_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ReadSpecialization, \"iUHjMFkah2vJJ6TL/1+3AWlcBfg=\");\n_c = ReadSpecialization;\nexport default ReadSpecialization;\nvar _c;\n$RefreshReg$(_c, \"ReadSpecialization\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ReadSpecialization","_s","specializations","setSpecializations","error","setError","fetchSpecializations","token","localStorage","getItem","response","get","headers","Authorization","console","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","spec","name","code","description","specialization_id","_c","$RefreshReg$"],"sources":["/home/dev/Desktop/ESD/ESD_miniProject/Frontend/src/Components/ReadSpecialization.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst ReadSpecialization = () => {\n  const [specializations, setSpecializations] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    const fetchSpecializations = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(\"http://localhost:8080/api/v1/specialization\", {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        console.log(\"RES\",response); // Debugging\n        setSpecializations(response.data);\n      } catch (error) {\n        setError(\"Error fetching specializations.\");\n      }\n    };\n\n    fetchSpecializations();\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <h2 className=\"text-center\">View Specializations</h2>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <ul className=\"list-group mt-3\">\n        {specializations.map((spec) => (\n          <li key={spec.specialization_id} className=\"list-group-item\">\n            <strong>{spec.name}</strong> ({spec.code}) - {spec.description}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ReadSpecialization;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMW,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6CAA6C,EAAE;UAC9EC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAC9C,CAAC,CAAC;QACFO,OAAO,CAACC,GAAG,CAAC,KAAK,EAACL,QAAQ,CAAC,CAAC,CAAC;QAC7BP,kBAAkB,CAACO,QAAQ,CAACM,IAAI,CAAC;MACnC,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdC,QAAQ,CAAC,iCAAiC,CAAC;MAC7C;IACF,CAAC;IAEDC,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKkB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BnB,OAAA;MAAIkB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpDlB,KAAK,iBAAIL,OAAA;MAAKkB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC3DvB,OAAA;MAAIkB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC5BhB,eAAe,CAACqB,GAAG,CAAEC,IAAI,iBACxBzB,OAAA;QAAiCkB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC1DnB,OAAA;UAAAmB,QAAA,EAASM,IAAI,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,IAAI,CAACE,IAAI,EAAC,MAAI,EAACF,IAAI,CAACG,WAAW;MAAA,GADvDH,IAAI,CAACI,iBAAiB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,kBAAkB;AAAA6B,EAAA,GAAlB7B,kBAAkB;AAoCxB,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}